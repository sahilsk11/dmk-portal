{"version":3,"file":"static/webpack/static/development/pages/index.js.d37c94c4c64a01ab1329.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Cookies from 'js-cookie';\nimport Head from 'next/head'\nimport { Doughnut } from 'react-chartjs-2';\n\nclass Index extends React.Component {\n  render() {\n    const style = {\n      position: \"relative\",\n      minHeight: \"100vh\",\n    }\n    return (\n      <div style={style}>\n        <Head>\n          <title>DMK Portal</title>\n          <link href=\"/images/icon.png\" rel=\"icon\" />\n        </Head>\n        <NavBar />\n        <ContentContainer />\n        <style jsx global>\n          {`\n            body {\n              margin: 0px;\n              background-color: #F7F7FB;\n              font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\n\n              -webkit-font-smoothing: antialiased;\n            }\n\n            .bg-color {\n              background-color: #F7F7FB;\n            }\n\n            .nav-container {\n              width: 100%;\n              background-color: #AB1B23;\n              height: 58px;\n            }\n\n            .nav-img {\n              width: 50px;\n              margin-left: 20px;\n              margin-top: 6px;\n            }\n\n            .content-container {\n              width: 100%;\n              margin: 0px auto;\n              display: flex;\n              justify-content: space-between;\n              height: 700px;\n              max-width: 1200px;\n              margin-bottom: 50px;\n            }\n\n            .column {\n              width: 100%;\n            }\n\n            .content-box {\n              background-color: white;\n              width: 90%;\n              box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n              display: block;\n              margin: 0px auto;\n              margin-top: 20px;\n              overflow: scroll;\n            }\n\n            .box-title {\n              text-align: center;\n              padding-top: 10px;\n              margin: 0px;\n              font-weight: 400;\n              font-size: 20px;\n            }\n\n            .box-content {\n              padding-top: 10px;\n              width: 95%;\n              display: block;\n              margin: 0px auto;\n              position: relative;\n            }\n\n            p {\n              text-align: center;\n              color: grey;\n              font-weight: 300;\n              margin-top: 3px;\n              margin-bottom: 3px;\n            }\n\n            .attendance-graph {\n              padding-top: 0px;\n              margin: 0px auto;\n              display: block;\n              width: 40%;\n              max-width: 200px;\n              margin-bottom: 10px;\n            }\n\n            .spotlight-img:hover {\n              box-shadow: 4px 4px 4px 0 rgba(0, 0, 0, 0.2), -10px 6px 20px 0 rgba(0, 0, 0, 0.19);\n              cursor: pointer;\n            }\n\n            .spotlight-img {\n              width: 43%;\n              margin: 0px auto;\n              display: block;\n              margin-bottom: 25px;\n              margin-top: 20px;\n              border-radius: 50%;\n              transition-duration: 0.2s;\n              min-width: 120px;\n            }\n\n            .brother-description {\n              transition-duration: 0.2s;\n            }\n\n            .brother-description:hover {\n              cursor: pointer;\n              color: rgb(50, 50, 50);\n            }\n\n            .events-container {\n              margin-top: 40px;\n            }\n\n            .event-wrapper {\n              min-height: 70px;\n              position: relative;\n            }\n\n            .event-item {\n              margin-top: 0px;\n              display: flex;\n              justify-content: flex-start;\n              transition-duration: 0.2s;\n              cursor: pointer;\n              border-radius: 10px;\n              position: relative;\n              top: 50%;\n              transform: translateY(-50%);\n              padding: 10px;\n              width: calc(100% - 20px);\n            }\n\n            .event-item:hover {\n              background-color: rgb(235, 235, 235);\n            }\n\n            .news-item-container {\n              display: flex;\n              justify-content: flex-start;\n              transition-duration: 0.2s;\n              padding-top: 7px;\n              padding-bottom: 7px;\n              padding-right: 2px;\n              border-radius: 10px;\n              cursor: pointer;\n              min-height: 50px;\n            }\n\n            .news-item-container:hover {\n              background-color: rgb(235, 235, 235);\n            }\n\n            .item-img-wrapper {\n              width: 30%;\n              position: relative;\n            }\n\n            .item-img {\n              position: relative;\n              width: 80%;\n              left: 50%;\n              top: 50%;\n              transform: translate(-50%, -50%);\n            }\n\n            .item-text-wrapper {\n              width: 70%;\n              position: relative;\n            }\n\n            .item-content {\n              position: relative;\n              top: 50%;\n              transform: translateY(-70%);\n            }\n\n            .hr {\n              border: 0.6px solid rgb(215, 215, 215);\n              margin: 3px auto;\n            }\n\n            .modal {\n              /* Hidden by default */\n              position: fixed;\n              /* Stay in place */\n              z-index: 1;\n              /* Sit on top */\n              padding-top: 100px;\n              /* Location of the box */\n              left: 0;\n              top: 0;\n              width: 100%;\n              /* Full width */\n              height: 100%;\n              /* Full height */\n              overflow: auto;\n              /* Enable scroll if needed */\n              background-color: rgb(0, 0, 0);\n              /* Fallback color */\n              background-color: rgba(0, 0, 0, 0.4);\n              /* Black w/ opacity */\n            }\n\n            /* Modal Content */\n\n            .modal-content {\n              background-color: #fefefe;\n              margin: auto;\n              border: 1px solid white;\n              width: 80%;\n              max-width: 500px;\n              position: relative;\n              padding-bottom: 40px;\n              padding-top: 3%;\n            }\n\n            .modal-img {\n              width: 40%;\n              display: block;\n              margin: 0px auto;\n              min-width: 150px;\n              max-width: 80%;\n            }\n\n            .modal-text-wrapper {\n              width: 77%;\n              padding-left: 10%;\n              padding-right: 10%;\n              margin: 0px auto;\n              display: block;\n            }\n\n            .modal-title {\n              text-align: center;\n            }\n\n            .modal-text {\n              text-align: left;\n            }\n\n            /* The Close Button */\n\n            .close {\n              color: #aaaaaa;\n              float: right;\n              font-size: 35px;\n              font-weight: bold;\n              position: absolute;\n              right: 10px;\n              top: 0px;\n            }\n\n            .close:hover, .close:focus {\n              color: #000;\n              text-decoration: none;\n              cursor: pointer;\n            }\n\n            .modal-btn {\n              text-align: center;\n              display: block;\n              margin: 0px auto;\n              margin-top: 30px;\n              height: 30px;\n              font-size: 16px;\n            }\n\n            .date-container {\n              width: 50px;\n              height: 50px;\n              background-color: #AB1B23;\n              border-radius: 10px;\n            }\n\n            .event-name {\n              margin-top: 5px;\n              margin-left: 10px;\n              font-weight: 300;\n              margin-bottom: 0px;\n            }\n\n            .event-time {\n              text-align: left;\n              margin-left: 10px;\n            }\n\n            .month {\n              margin-top: 3px;\n              margin-bottom: 0px;\n              color: white;\n              font-size: 12px;\n            }\n\n            .day {\n              color: white;\n              margin-top: 0px;\n              font-size: 25px;\n            }\n\n            .input-wrapper {\n              width: 90%;\n              display: block;\n              margin: 0px auto;\n              position: relative;\n            }\n\n            .slack-input {\n              background-color: rgb(242, 242, 242);\n              resize: none;\n              font-size: 17px;\n              width: 92%;\n              height: 70px;\n              border: none;\n              border-radius: 4px;\n              margin-bottom: 30px;\n              padding: 10px;\n            }\n\n            button {\n              font-size: 17px;\n              border: none;\n              background-color: rgb(191, 49, 56);\n              color: white;\n              width: 80px;\n              height: 25px;\n              cursor: pointer;\n              outline: none;\n              border-radius: 4px;\n            }\n\n            .slack-send {\n              position: absolute;\n              bottom: 0;\n              right: 3px;\n            }\n\n            button:hover {\n              background-color: #AB1B23;\n            }\n\n            *{\n              margin: 0;\n              padding: 0;\n            }\n            .rate {\n              margin-top: 30px;\n              display: flex;\n              justify-content: center;\n              flex-direction: row-reverse;\n              height: 46px;\n              padding: 0 10px;\n            }\n            .rate:not(:checked) > input {\n            position:absolute;\n          top:-9999px;\n      }\n.rate:not(:checked) > label {\n            float:right;\n          width:1em;\n          overflow:hidden;\n          white-space:nowrap;\n          cursor:pointer;\n          font-size:30px;\n          color:#ccc;\n      }\n.rate:not(:checked) > label:before {\n            content: '★ ';\n      }\n.rate > input:checked ~ label {\n            color: #ffc700;\n      }\n      .rate:not(:checked) > label:hover,\n.rate:not(:checked) > label:hover ~ label {\n            color: #deb217;\n      }\n      .rate > input:checked + label:hover,\n      .rate > input:checked + label:hover ~ label,\n      .rate > input:checked ~ label:hover,\n      .rate > input:checked ~ label:hover ~ label,\n.rate > label:hover ~ input:checked ~ label {\n            color: #c59b08;\n      }\n      \n\n            @media only screen and (max-width: 790px) {\n              .content-container {\n                display: block;\n                max-width: 500px;\n                height: auto;\n              }\n              .content-box {\n                max-height: 400px;\n              }\n              .slack-input {\n                margin-bottom: 50px;\n              }\n              .slack-send {\n                bottom: 20px;\n                right: 10px;\n              }\n            }\n            \n          `}\n        </style>\n      </div>\n    );\n  }\n}\n\nclass NavBar extends React.Component {\n  logout() {\n    Cookies.remove(\"token\");\n    window.location = \"/login\"\n  }\n  render() {\n    const styles = {\n      logoutStyle: {\n        position: \"absolute\",\n        right: \"20px\",\n        width: \"25px\",\n        top: \"15px\",\n        cursor: \"pointer\"\n      }\n    }\n    return (\n      <div className=\"nav-container\">\n        <img src=\"/images/icon.png\" className=\"nav-img\" />\n        <img src=\"/images/logout.png\" style={styles.logoutStyle} onClick={() => { this.logout() }} />\n      </div>\n    )\n  }\n}\n\nclass ContentContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { eventsData: [], newsData: [], upcomingData: [], spotlightData: {}, brotherData: {}, pageSettings: {}, loadedPage: false }\n  }\n\n  componentDidMount() {\n    if (Cookies.get(\"token\") == undefined) {\n      window.location = \"/login\"\n    } else {\n      this.setState({ token: Cookies.get(\"token\") });\n    }\n    this.fetchPageData();\n  }\n\n  fetchPageData() {\n    const url = \"http://localhost:8080/pageData?token=\" + Cookies.get(\"token\");\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        this.setState({\n          spotlightData: data.body.brotherSpotlight,\n          upcomingData: data.body.upcomingData,\n          newsData: data.body.newsData,\n          eventsData: data.body.eventsData,\n          brotherData: data.body.brotherData,\n          pageSettings: data.body.pageSettings,\n          loadedPage: true\n        });\n        console.log(this.state.pageSettings)\n      });\n  }\n\n  render() {\n    if (!this.state.loadedPage) {\n      const loadingStyle = {\n        display: \"block\",\n        margin: \"0px auto\",\n        marginTop: \"20%\",\n        transform: \"translateY(-50%)\",\n        width: \"30px\"\n      }\n      return (\n        <img src=\"/images/loading.gif\" style={loadingStyle} />\n      )\n    }\n    return (\n      <div className=\"content-container\">\n        <div className=\"column\">\n          <ContentBox title={\"Welcome, \" + this.state.brotherData.firstName + \" 👋\"} height=\"7%\" />\n          <ContentBox title=\"Chapter Attendance 🙌\" height=\"45%\">\n            <Attendance attendedChapters={this.state.brotherData.attendance} totalChapters={this.state.pageSettings.totalChapters} checkInActive={this.state.pageSettings.displayCheckIn} />\n          </ContentBox>\n          <ContentBox title=\"Brother Spotlight 🤠\" height=\"40%\">\n            <Spotlight data={this.state.spotlightData} />\n          </ContentBox>\n        </div>\n        <div className=\"column\">\n          <ContentBox title=\"Coming Up ⚡️\" height=\"44.7%\">\n            <NewsList data={this.state.upcomingData} />\n          </ContentBox>\n          <ContentBox title=\"News Panel 📰\" height=\"50%\">\n            <NewsList data={this.state.newsData} />\n          </ContentBox>\n        </div>\n        <div className=\"column\">\n          <ContentBox title=\"Upcoming Events 📣\" height=\"67.7%\">\n            <EventsList data={this.state.eventsData} />\n          </ContentBox>\n          <ContentBox title=\"Drop us a Line 🤖\" height=\"27%\">\n            <Slack />\n          </ContentBox>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ContentBox extends React.Component {\n  render() {\n    return (\n      <div className=\"content-box\" style={{ \"height\": this.props.height }}>\n        <h3 className=\"box-title\">{this.props.title}</h3>\n        <div className=\"box-content\">\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Attendance extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { displayModal: false }\n  }\n  toggleModal = () => {\n    this.setState({ displayModal: !this.state.displayModal });\n  }\n  renderButton() {\n    const descriptionStyle = {\n      marginTop: \"30px\",\n      marginBottom: \"30px\"\n    }\n    const buttonStyle = {\n      display: \"block\",\n      margin: \"0px auto\",\n      marginTop: \"30px\",\n      height: \"30px\",\n      width: \"100px\",\n      fontSize: \"18px\"\n    }\n    if (this.props.checkInActive === 'true') {\n      return (\n        <div>\n          <button onClick={() => this.toggleModal()} style={buttonStyle}>check in</button>\n          <Modal display={this.state.displayModal} closeModal={this.toggleModal}>\n            <CheckInForm />\n          </Modal>\n        </div>\n      );\n    } else {\n      return (\n        <p style={descriptionStyle}>We've seen you at {this.props.attendedChapters} out of {this.props.totalChapters} chapters this semester.</p>\n      );\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Graph attended={this.props.attendedChapters} totalChapters={this.props.totalChapters} />\n        {this.renderButton()}\n      </div>\n    );\n  }\n}\n\nclass CheckInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { displayState: \"default\", codeValue: \"\", chapterRating: 0 };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setRating = this.setRating.bind(this);\n\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const url = \"http://localhost:8080/checkIn?token=\" + Cookies.get(\"token\") + \"&code=\" + this.state.codeValue + \"&username=\" + this.props.username;\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        this.setState({\n          displayState: data.validCode ? \"rateChapter\" : \"invalid\"\n        })\n      });\n  }\n  setRating(rating) {\n    this.setState({ chapterRating: rating });\n    console.log(this.state.chapterRating)\n  }\n  handleChange(event) {\n    this.setState({ codeValue: event.target.value });\n  }\n  renderState() {\n    const styles = {\n      modalSubtitle: {\n        textAlign: \"center\"\n      },\n      inputStyle: {\n        border: \"1px solid grey\",\n        padding: \"6px\",\n        borderRadius: \"4px\",\n        fontSize: \"14px\",\n        display: \"block\",\n        margin: \"20px auto\",\n        textAlign: \"center\",\n        width: this.props.width\n      },\n      submitButtonStyle: {\n        fontSize: \"20px\",\n        border: \"none\",\n        backgroundColor: \"rgb(191, 49, 56)\",\n        color: \"white\",\n        width: \"70px\",\n        height: \"30px\",\n        cursor: \"pointer\",\n        outline: \"none\",\n        borderRadius: \"4px\",\n        display: \"block\",\n        margin: \"0px auto\",\n        marginTop: \"30px\"\n      },\n      textInput: {\n        backgroundColor: \"rgb(242, 242, 242)\",\n        resize: \"none\",\n        fontSize: \"17px\",\n        width: \"92%\",\n        height: \"70px\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        marginBottom: \"0px\",\n        marginTop: \"40px\",\n        padding: \"10px\"\n      }\n    }\n    if (this.state.displayState == \"default\") {\n      return (\n        <div>\n          <h2 style={{ marginTop: \"0px\" }} className=\"modal-title\">Check In</h2>\n          <p style={styles.modalSubtitle} className=\"modal-text\">Please enter the code provided in chapter.</p>\n          <form onSubmit={this.handleSubmit}>\n            <input style={styles.inputStyle} onChange={this.handleChange} value={this.state.codeValue} onChange={this.handleChange} placeholder=\"\" />\n            <button style={styles.submitButtonStyle}>→</button>\n          </form>\n        </div>\n      );\n    } else if (this.state.displayState == \"invalid\") {\n      return (\n        <div>\n          <h2 style={{ marginTop: \"0px\" }} className=\"modal-title\">Not quite 😕</h2>\n          <p style={styles.modalSubtitle} className=\"modal-text\">Did you spell it right?</p>\n          <form onSubmit={this.handleSubmit}>\n            <input style={styles.inputStyle} onChange={this.handleChange} value={this.state.codeValue} onChange={this.handleChange} placeholder=\"\" />\n            <button style={styles.submitButtonStyle}>→</button>\n          </form>\n        </div>\n      );\n    } else if (this.state.displayState == \"rateChapter\") {\n      return (\n        <div>\n          <h2 style={{ marginTop: \"0px\" }} className=\"modal-title\">Thanks for coming today ✨</h2>\n          <p style={styles.modalSubtitle} className=\"modal-text\">How would you rate chapter today?</p>\n          <form onSubmit={this.handleSubmit}>\n            <RatingSystem setRating={this.setRating}/>\n            <textarea style={styles.textInput} placeholder=\"I loved the...\"></textarea>\n            <button style={styles.submitButtonStyle}>→</button>\n          </form>\n        </div>\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"modal-text-wrapper\">\n        {this.renderState()}\n      </div>\n    )\n  }\n}\n\nclass RatingSystem extends React.Component {\n  render() {\n    return (\n      <div className=\"rate\">\n        <input onClick={() => this.props.setRating(5)} type=\"radio\" id=\"star5\" name=\"rate\" value=\"5\" />\n        <label htmlFor=\"star5\" title=\"text\">5 stars</label>\n        <input onClick={() => this.props.setRating(4)} type=\"radio\" id=\"star4\" name=\"rate\" value=\"4\" />\n        <label htmlFor=\"star4\" title=\"text\">4 stars</label>\n        <input onClick={() => this.props.setRating(3)} type=\"radio\" id=\"star3\" name=\"rate\" value=\"3\" />\n        <label htmlFor=\"star3\" title=\"text\">3 stars</label>\n        <input onClick={() => this.props.setRating(2)} type=\"radio\" id=\"star2\" name=\"rate\" value=\"2\" />\n        <label htmlFor=\"star2\" title=\"text\">2 stars</label>\n        <input onClick={() => this.props.setRating(1)} type=\"radio\" id=\"star1\" name=\"rate\" value=\"1\" />\n        <label htmlFor=\"star1\" title=\"text\">1 star</label>\n      </div>\n    );\n  }\n}\n\nclass Graph extends React.Component {\n  splitColors() {\n    return [parseInt(this.props.attended), parseInt(this.props.totalChapters) - parseInt(this.props.attended)];\n  }\n  render() {\n    const data = {\n      labels: [\n        'Attended',\n        'Missed'\n      ],\n      datasets: [{\n        data: this.splitColors(),\n        backgroundColor: [\n          '#AF1E2B',\n          '#d6d6d6',\n        ],\n        hoverBackgroundColor: [\n          '#990A1B',\n          '#b5b5b5',\n        ]\n      }]\n    };\n    const options = {\n      legend: {\n        display: false\n      },\n      cutoutPercentage: 50\n    }\n    const graphContainerStyle = {\n\n    }\n    return (\n      <div>\n        <Doughnut data={data} options={options} />\n      </div>\n    )\n  }\n}\n\nclass Spotlight extends React.Component {\n  renderWhenReady() {\n    if (this.props.data.img != undefined) {\n      return (\n        <div>\n          <img className=\"spotlight-img\" src={this.props.data.img[0].url} />\n          <p className=\"brother-description\">{this.props.data.content}</p>\n        </div>\n      )\n    }\n    return null;\n  }\n  render() {\n    return (\n      <div>\n        {this.renderWhenReady()}\n      </div>\n    );\n  }\n}\n\nclass NewsList extends React.Component {\n  renderItems() {\n    var items = [];\n    for (var i = 0; i < this.props.data.length; i++) {\n      items.push(<NewsItem key={i} data={this.props.data[i]} img={this.props.data[i].img[0].url} />);\n    }\n    return items;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderItems()}\n      </div>\n    );\n  }\n}\n\nclass NewsItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { displayModal: false };\n  }\n\n  toggleModal = () => {\n    this.setState({ displayModal: !this.state.displayModal });\n  }\n\n  handleClick() {\n    if (this.props.data.link != \"#\") {\n      window.open(this.props.data.link, \"_blank\")\n    } else {\n      this.toggleModal();\n      console.log(this.state.displayModal);\n    }\n  }\n\n  renderImage() {\n    if (this.props.img != undefined && this.props.img != \"\") {\n      return (\n        <div>\n          <div className=\"news-item-container\" onClick={() => this.handleClick()}>\n            <div className=\"item-img-wrapper\">\n              <img className=\"item-img\" src={this.props.img} />\n            </div>\n            <div className=\"item-text-wrapper\">\n              <p className=\"item-content\">{this.props.data.headline}</p>\n            </div>\n          </div>\n          <Modal display={this.state.displayModal} closeModal={this.toggleModal}>\n            <img src={this.props.img} className=\"modal-img\" />\n            <div className=\"modal-text-wrapper\">\n              <h2 className=\"modal-title\">{this.props.data.headline}</h2>\n              <p className=\"modal-text\">{this.props.data.description}</p>\n            </div>\n            <button className=\"modal-btn\" onClick={this.toggleModal}>close</button>\n          </Modal>\n          <hr className=\"hr\" width=\"70%\" />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p>{this.props.data.content}</p>\n          <hr className=\"hr\" width=\"70%\" />\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderImage()}\n      </div>\n    );\n  }\n}\n\nclass Modal extends React.Component {\n  render() {\n    if (this.props.display) {\n      return (\n        <div id={this.props.id} className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={this.props.closeModal}>&times;</span>\n            {this.props.children}\n          </div>\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n}\n\nclass EventsList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderItems() {\n    var items = [];\n    const data = this.props.data;\n    for (var i = 0; i < data.length; i++) {\n      items.push(<EventItem key={i} data={data[i]} />);\n    }\n    return items;\n  }\n\n  render() {\n    return (\n      <div className=\"events-container\">\n        {this.renderItems()}\n      </div>\n    );\n  }\n}\n\nclass EventItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { displayModal: false };\n  }\n\n  toggleModal = () => {\n    this.setState({ displayModal: !this.state.displayModal });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"event-wrapper\">\n          <div className=\"event-item\" onClick={() => this.toggleModal()}>\n            <div className=\"date-container\">\n              <p className=\"month\">{this.props.data.month}</p>\n              <p className=\"day\">{this.props.data.day}</p>\n            </div>\n            <div>\n              <h5 className=\"event-name\">{this.props.data.name}</h5>\n              <p className=\"event-time\">{this.props.data.time}</p>\n            </div>\n          </div>\n        </div>\n        <Modal display={this.state.displayModal} closeModal={this.toggleModal}>\n\n          <div className=\"modal-text-wrapper\">\n            <h2 className=\"modal-title\">{this.props.data.name}</h2>\n            <p className=\"modal-text\">{this.props.data.description}</p>\n          </div>\n          <button className=\"modal-btn\" onClick={this.toggleModal}>close</button>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass Slack extends React.Component {\n  render() {\n    return (\n      <div className=\"input-wrapper\">\n        <textarea className=\"slack-input\" placeholder=\"I'm hungry...\"></textarea>\n        <button className=\"slack-send\" onClick={() => alert(\"This doesn't do anything yet :(\")}>send</button>\n      </div>\n    )\n  }\n}\n\nexport default Index;\n"],"mappings":"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A;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AA5BA;AACA;AAwihBA;AACA;AAkBA;;;;;;;;;;;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AANA;AALA;AAiBA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AApCA;AACA;AAsCA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlBA;AACA;AAoBA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAfA;AACA;AAiBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA1DA;AACA;AA4DA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;;;AAdA;AACA;AAgBA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AApBA;AACA;AAsBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnCA;AACA;AAqCA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AARA;AACA;AAUA;;;;A","sourceRoot":""}