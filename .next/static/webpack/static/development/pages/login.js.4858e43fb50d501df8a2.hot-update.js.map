{"version":3,"file":"static/webpack/static/development/pages/login.js.4858e43fb50d501df8a2.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import { Provider as AlertProvider, useAlert } from 'react-alert'\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { firstName: \"\", lastName: \"\", username: \"\", displayState: \"entry\", password: \"\", loading: false, newUser: false }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.authenticate = this.authenticate.bind(this);\n    this.checkUsername = this.checkUsername.bind(this);\n  }\n\n  handleChange(event) {\n    const inputName = event.target.name;\n    this.setState({ [inputName]: event.target.value });\n  }\n\n  authenticate(event) {\n    event.preventDefault();\n    const url = \"http://localhost:8080\";\n    fetch(url + \"/authenticate?username=\" + this.state.username + \"&token=\" + this.state.password, {\n      method: \"POST\"\n    }).then(response => response.json())\n      .then(data => {\n        if (data[\"authenticated\"]) {\n          document.cookie = \"token=\" + data.token + \"; path=/\";\n          window.location = \"/\";\n        } else {\n          this.setState({ displayState: \"error\" })\n        }\n      })\n  }\n\n  checkUsername(event) {\n    event.preventDefault();\n    console.log(this.state.username)\n    this.setState({ loading: true })\n    const url = \"http://localhost:8080/check_user?username=\" + this.state.username;\n    fetch(url, {\n      method: 'POST'\n    }).then(response => response.json())\n      .then(data => {\n        let newUser = false;\n        let newState = data.state;\n        if (data.state === \"new_user\") {\n          newUser = true;\n          newState = \"authenticate\"\n        }\n        this.setState({ displayState: newState, loading: false, newUser: newUser });\n      }).catch((error) => {\n        this.setState({ displayState: \"error\" });\n      });;\n  }\n\n  validateFields() {\n    return (this.state.firstName !== \"\" && this.state.lastName !== \"\" && this.state.username !== \"\");\n  }\n\n  displayBox() {\n    if (this.state.displayState === \"entry\") {\n      return (\n        <ContentBox title={\"Hey There ðŸ‘‹\"} subtitle={\"Welcome to the DMK Portal! Let's start with your Purdue username.\"}>\n          <form onSubmit={this.checkUsername}>\n            <Input name=\"username\" onChange={this.handleChange} placeholder=\"Purdue Username\" value={this.state.username} />\n            <Button loading={this.state.loading} />\n          </form>\n        </ContentBox>\n      );\n    } else if (this.state.displayState === \"authenticate\") {\n      return (\n        <ContentBox title={\"Check your email ðŸ“«\"} subtitle={\"Check your Purdue email for authentication (or continue if password saved).\"}>\n          <form onSubmit={this.authenticate}>\n            <Input name=\"password\" onChange={this.handleChange} value={this.state.password} placeholder=\"top secret...\" />\n            <Button loading={this.state.loading} />\n          </form>\n        </ContentBox>\n      );\n    } else {\n      console.log(this.state.displayState);\n      return (\n        <ContentBox title={\"Well, that's embarrassing ðŸ™ˆ\"} subtitle={\"There's an error on our end. Try again later!\"}>\n        </ContentBox>\n      )\n    }\n  }\n\n  render() {\n    const alertOptions = {\n      position: 'bottom center',\n      timeout: 5000,\n      offset: '30px',\n      transition: 'scale'\n    }\n    return (\n      <AlertProvider {...options}>\n        <NavBar />\n        {this.displayBox()}\n        {/*Global CSS goes in here*/}\n        <style jsx global>\n          {`\n            body {\n              margin: 0px;\n              background-color: #F7F7FB;\n              font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;\n\n              -webkit-font-smoothing: antialiased;\n            }\n            \n          `}\n        </style>\n      </AlertProvider>\n    );\n  }\n}\n\nclass NavBar extends React.Component {\n  render() {\n    const navContainerStyle = {\n      width: \"100%\",\n      backgroundColor: \"#AB1B23\",\n      height: \"58px\"\n    }\n    const navImgStyle = {\n      width: \"50px\",\n      marginLeft: \"20px\",\n      marginTop: \"6px\"\n    }\n    return (\n      <div style={navContainerStyle}>\n        <img src=\"/images/icon.png\" style={navImgStyle} />\n      </div>\n    )\n  }\n}\n\nclass ContentBox extends React.Component {\n  render() {\n    let styles = {\n      contentBoxStyle: {\n        backgroundColor: \"white\",\n        width: \"500px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n        display: \"block\",\n        margin: \"0px auto\",\n        marginTop: \"20px\",\n        overflow: \"scroll\",\n        height: \"350px\",\n        maxWidth: \"95%\"\n      },\n      boxTitleStyle: {\n        textAlign: \"center\",\n        paddingTop: \"30px\",\n        margin: \"0px\",\n        fontWeight: \"400\",\n        fontSize: \"35px\"\n      },\n      innerContentStyle: {\n        paddingTop: \"10px\",\n        width: \"95%\",\n        display: \"block\",\n        margin: \"0px auto\",\n        position: \"relative\"\n      },\n      subtitle: {\n        textAlign: \"center\",\n        fontWeight: \"300\",\n        marginTop: \"10px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\"\n      }\n    }\n\n    return (\n      <div style={styles.contentBoxStyle}>\n        <h3 style={styles.boxTitleStyle}>{this.props.title}</h3>\n        <h3 style={styles.subtitle}>{this.props.subtitle}</h3>\n        <div style={styles.innerContentStyle}>\n          {this.props.children}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Input extends React.Component {\n  render() {\n    const inputStyle = {\n      border: \"1px solid black\",\n      padding: \"6px\",\n      borderRadius: \"4px\",\n      fontSize: \"17px\",\n      display: \"block\",\n      margin: \"20px auto\",\n      textAlign: \"center\",\n      width: this.props.width\n    }\n    return (\n      <input name={this.props.name} style={inputStyle} value={this.props.value} onChange={this.props.onChange} placeholder={this.props.placeholder} />\n    )\n  }\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hover: false }\n  }\n  toggleHover() {\n    this.setState({ hover: !this.state.hover });\n  }\n  render() {\n    let buttonStyle = {\n      fontSize: \"30px\",\n      border: \"none\",\n      backgroundColor: \"rgb(191, 49, 56)\",\n      color: \"white\",\n      width: \"100px\",\n      height: \"40px\",\n      cursor: \"pointer\",\n      outline: \"none\",\n      borderRadius: \"4px\",\n      display: \"block\",\n      margin: \"0px auto\",\n      marginTop: \"30px\"\n    }\n    const loadingSyle = {\n      width: \"30px\",\n      display: \"block\",\n      margin: \"0px auto\"\n    }\n    if (this.state.hover) {\n      buttonStyle.backgroundColor = \"#AB1B23\"\n    }\n    if (this.props.loading) {\n      return (\n        <img src=\"/images/loading.gif\" style={loadingSyle} />\n      )\n    } else {\n      return (\n        <div>\n          <button onMouseLeave={() => this.toggleHover()} onMouseEnter={() => this.toggleHover()} style={buttonStyle} onClick={this.props.onClick}>â†’</button>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAkBA;;;;AA9GA;AACA;AAgHA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjBA;AACA;AAmBA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AA1BA;AAmCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9CA;AACA;AAgDA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAfA;AACA;AAiBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAAA;AACA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;AA1CA;AACA;AA4CA;;;;A","sourceRoot":""}