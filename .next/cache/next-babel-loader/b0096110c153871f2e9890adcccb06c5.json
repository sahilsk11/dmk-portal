{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayState: \"default\",\n      loading: false,\n      inputValue: \"\",\n      newUser: false,\n      username: \"\",\n      firstName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.skipEmail = this.skipEmail.bind(this);\n    this.confirmedEmail = this.confirmedEmail.bind(this);\n    this.authenticate = this.authenticate.bind(this);\n    this.checkUsername = this.checkUsername.bind(this);\n    this.setFirstName = this.setFirstName.bind(this);\n    this.setLastName = this.setLastName.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  skipEmail() {\n    console.log(\"HI\");\n    this.setState({\n      displayState: \"authenticate\"\n    });\n  }\n\n  validateInput(inputValue) {\n    if (inputValue == \"\") {\n      alert(\"Please type in your username!\");\n      return;\n    } else if (inputValue.length > 10) {\n      alert(\"That's a little too long!\");\n      return;\n    }\n  }\n\n  checkUsername(event) {\n    event.preventDefault();\n    const username = this.state.inputValue;\n    this.setState({\n      username,\n      loading: true\n    });\n    const url = \"http://localhost:8080/checkUser?username=\" + username;\n    fetch(url, {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        displayState: data.state,\n        cellID: data.cellID,\n        loading: false,\n        inputValue: \"\",\n        newUser: data.state === \"newUser\",\n        firstName: data.firstName\n      });\n    }).catch(error => {\n      this.setState({\n        displayState: \"error\"\n      });\n    });\n  }\n\n  setFirstName(event) {\n    event.preventDefault();\n    this.setState({\n      firstName: this.state.inputValue,\n      inputValue: \"\",\n      displayState: \"setLastName\"\n    });\n  }\n\n  setLastName(event) {\n    event.preventDefault();\n    this.setState({\n      lastName: this.state.inputValue,\n      inputValue: \"\",\n      displayState: \"returningUser\"\n    });\n  }\n\n  confirmedEmail() {\n    const username = this.state.username;\n    const firstName = this.state.firstName;\n    const lastName = this.state.lastName;\n    this.setState({\n      loading: true\n    });\n    const url = \"http://localhost:8080/sendEmail?username=\" + username + \"&firstName=\" + firstName + \"&lastName=\" + lastName + \"&newUser=\" + this.state.newUser + \"&cellID=\" + this.state.cellID;\n    fetch(url).then(response => response.json()).then(data => {\n      if (data.success) {\n        this.setState({\n          displayState: \"authenticate\",\n          inputValue: \"\",\n          loading: false\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        displayState: \"error\"\n      });\n    });\n  }\n\n  authenticate(event) {\n    event.preventDefault();\n    const token = this.state.inputValue;\n    const url = \"http://localhost:8080/authenticate?username=\" + this.state.username + \"&token=\" + token;\n    fetch(url, {\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      if (data.authenticated) {\n        document.cookie = \"token=\" + data.token + \"; path=/\";\n        window.location = \"/\";\n      } else {\n        this.setState({\n          displayState: \"invalidPassword\"\n        });\n      }\n    });\n  }\n\n  renderBasedOnState() {\n    if (this.state.displayState == \"default\") {\n      return __jsx(InputContentBox, {\n        title: \"Hey There \\uD83D\\uDC4B\",\n        subtitle: \" Welcome to the DMK Portal! Let's start with your Purdue username.\",\n        onFormSubmit: this.checkUsername,\n        onChange: this.handleChange,\n        inputValue: this.state.inputValue,\n        placeholder: \"Purdue username\",\n        loading: this.state.loading\n      });\n    } else if (this.state.displayState == \"newUser\") {\n      return __jsx(InputContentBox, {\n        title: \"You look new! \\uD83D\\uDC40\",\n        subtitle: \"What's your first name?\",\n        onFormSubmit: this.setFirstName,\n        onChange: this.handleChange,\n        inputValue: this.state.inputValue,\n        placeholder: \"What do you go by?\",\n        loading: this.state.loading\n      });\n    } else if (this.state.displayState == \"setLastName\") {\n      return __jsx(InputContentBox, {\n        title: \"...and last name \\uD83C\\uDF89\",\n        subtitle: \"No middle name please.\",\n        onFormSubmit: this.setLastName,\n        onChange: this.handleChange,\n        inputValue: this.state.inputValue,\n        placeholder: \"Who are your people?\",\n        loading: this.state.loading\n      });\n    } else if (this.state.displayState == \"returningUser\") {\n      return __jsx(DialogueBox, {\n        title: \"Welcome, \" + this.state.firstName + \" 🐶\",\n        username: this.state.username,\n        onSubmit: this.confirmedEmail,\n        skipEmail: this.skipEmail,\n        displaySkip: !this.state.newUser\n      });\n    } else if (this.state.displayState == \"authenticate\") {\n      return __jsx(InputContentBox, {\n        title: \"Identify Yourself \\uD83D\\uDD10\",\n        subtitle: \"You should have received your code via email.\",\n        onFormSubmit: this.authenticate,\n        onChange: this.handleChange,\n        inputValue: this.state.inputValue,\n        placeholder: \"Top secret\",\n        loading: this.state.loading\n      });\n    } else if (this.state.displayState == \"invalidPassword\") {\n      return __jsx(InputContentBox, {\n        title: \"Not quite \\uD83D\\uDE15\",\n        subtitle: \"That code is incorrect. Did you get caps right?\",\n        onFormSubmit: this.authenticate,\n        onChange: this.handleChange,\n        inputValue: this.state.inputValue,\n        placeholder: \"Top secret\",\n        loading: this.state.loading\n      });\n    } else {\n      return __jsx(ErrorBox, null);\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"production\");\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"jsx-1555840043\"\n    }, __jsx(Head, null, __jsx(\"title\", {\n      className: \"jsx-1555840043\"\n    }, \"DMK Portal - Login\"), __jsx(\"link\", {\n      href: \"/images/icon.png\",\n      rel: \"icon\",\n      className: \"jsx-1555840043\"\n    })), __jsx(NavBar, null), this.renderBasedOnState(), __jsx(_JSXStyle, {\n      id: \"1555840043\"\n    }, [\"body{margin:0px;background-color:#F7F7FB;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;}\"]));\n  }\n\n}\n\nclass NavBar extends React.Component {\n  render() {\n    const navContainerStyle = {\n      width: \"100%\",\n      backgroundColor: \"#AB1B23\",\n      height: \"58px\"\n    };\n    const navImgStyle = {\n      width: \"50px\",\n      marginLeft: \"20px\",\n      marginTop: \"6px\"\n    };\n    return __jsx(\"div\", {\n      style: navContainerStyle\n    }, __jsx(\"img\", {\n      src: \"/images/icon.png\",\n      style: navImgStyle\n    }));\n  }\n\n}\n\nclass InputContentBox extends React.Component {\n  render() {\n    return __jsx(ContentBox, {\n      title: this.props.title,\n      subtitle: this.props.subtitle\n    }, __jsx(\"form\", {\n      onSubmit: this.props.onFormSubmit\n    }, __jsx(Input, {\n      onChange: this.props.onChange,\n      value: this.props.inputValue,\n      placeholder: this.props.placeholder\n    }), __jsx(Button, {\n      loading: this.props.loading,\n      buttonText: \"\\u2192\"\n    })));\n  }\n\n}\n\nclass ErrorBox extends React.Component {\n  render() {\n    return __jsx(ContentBox, {\n      title: \"Well, that's embarrassing \\uD83D\\uDE48\",\n      subtitle: \"There's an error on our end. Try again later!\"\n    });\n  }\n\n}\n\nclass DialogueBox extends React.Component {\n  renderSkip() {\n    const anchorStyle = {\n      textAlign: 'center',\n      fontSize: \"12px\",\n      display: \"block\",\n      paddingBottom: \"10px\"\n    };\n\n    if (this.props.displaySkip) {\n      return __jsx(\"a\", {\n        style: anchorStyle,\n        href: \"#\",\n        onClick: this.props.skipEmail\n      }, \"I know my code\");\n    }\n  }\n\n  render() {\n    const anchorStyle = {\n      textAlign: 'center',\n      fontSize: \"12px\",\n      display: \"block\",\n      paddingBottom: \"10px\"\n    };\n    return __jsx(ContentBox, {\n      title: this.props.title,\n      subtitle: \"We're sending your code to \" + this.props.username + \"@purdue.edu.\"\n    }, __jsx(Button, {\n      buttonText: \"Email me the code\",\n      fontSize: \"15\",\n      width: \"180\",\n      onClick: this.props.onSubmit\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: \"40px\"\n      }\n    }, this.renderSkip(), __jsx(\"a\", {\n      style: anchorStyle,\n      href: \"#\",\n      onClick: () => location.reload()\n    }, \"Oops - wrong email!\")));\n  }\n\n}\n\nclass ContentBox extends React.Component {\n  render() {\n    let styles = {\n      contentBoxStyle: {\n        backgroundColor: \"white\",\n        width: \"500px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n        display: \"block\",\n        margin: \"0px auto\",\n        marginTop: \"20px\",\n        overflow: \"scroll\",\n        height: \"350px\",\n        maxWidth: \"95%\"\n      },\n      boxTitleStyle: {\n        textAlign: \"center\",\n        paddingTop: \"30px\",\n        margin: \"0px\",\n        fontWeight: \"400\",\n        fontSize: \"35px\"\n      },\n      innerContentStyle: {\n        paddingTop: \"10px\",\n        width: \"95%\",\n        display: \"block\",\n        margin: \"0px auto\",\n        position: \"relative\"\n      },\n      subtitle: {\n        textAlign: \"center\",\n        fontWeight: \"300\",\n        marginTop: \"10px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\"\n      }\n    };\n    return __jsx(\"div\", {\n      style: styles.contentBoxStyle\n    }, __jsx(\"h3\", {\n      style: styles.boxTitleStyle\n    }, this.props.title), __jsx(\"h3\", {\n      style: styles.subtitle\n    }, this.props.subtitle), __jsx(\"div\", {\n      style: styles.innerContentStyle\n    }, this.props.children));\n  }\n\n}\n\nclass Input extends React.Component {\n  render() {\n    const inputStyle = {\n      border: \"1px solid black\",\n      padding: \"6px\",\n      borderRadius: \"4px\",\n      fontSize: \"17px\",\n      display: \"block\",\n      margin: \"20px auto\",\n      textAlign: \"center\",\n      width: this.props.width\n    };\n\n    if (this.props.hide !== true) {\n      return __jsx(\"input\", {\n        name: this.props.name,\n        style: inputStyle,\n        value: this.props.value,\n        onChange: this.props.onChange,\n        placeholder: this.props.placeholder\n      });\n    }\n\n    return null;\n  }\n\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  toggleHover() {\n    this.setState({\n      hover: !this.state.hover\n    });\n  }\n\n  render() {\n    let buttonStyle = {\n      fontSize: this.props.fontSize == undefined ? \"30px\" : this.props.fontSize + \"px\",\n      border: \"none\",\n      backgroundColor: \"rgb(191, 49, 56)\",\n      color: \"white\",\n      width: this.props.width == undefined ? \"100px\" : this.props.width + \"px\",\n      height: \"40px\",\n      cursor: \"pointer\",\n      outline: \"none\",\n      borderRadius: \"4px\",\n      display: \"block\",\n      margin: \"0px auto\",\n      marginTop: \"30px\"\n    };\n    const loadingSyle = {\n      width: \"30px\",\n      display: \"block\",\n      margin: \"0px auto\"\n    };\n\n    if (this.state.hover) {\n      buttonStyle.backgroundColor = \"#AB1B23\";\n    }\n\n    if (this.props.hide === true) {\n      return null;\n    }\n\n    if (this.props.loading) {\n      return __jsx(\"img\", {\n        src: \"/images/loading-white.gif\",\n        style: loadingSyle\n      });\n    } else {\n      return __jsx(\"div\", null, __jsx(\"button\", {\n        onMouseLeave: () => this.toggleHover(),\n        onMouseEnter: () => this.toggleHover(),\n        style: buttonStyle,\n        onClick: this.props.onClick\n      }, this.props.buttonText));\n    }\n  }\n\n}\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}