{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"S\",\n      lastName: \"a\",\n      username: \"h\",\n      displayState: \"form\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateToken = this.validateToken.bind(this);\n  }\n\n  handleChange(event) {\n    const inputName = event.target.name;\n    this.setState({\n      [inputName]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.validateFields()) {\n      const url = \"http://localhost:8080\";\n      fetch(url + \"/add?first=\" + this.state.firstName + \"&last=\" + this.state.lastName + \"&username=\" + this.state.username, {\n        method: \"POST\",\n        body: _JSON$stringify(this.state)\n      }).then(response => response.json()).then(data => {\n        if (data[\"sent\"]) {\n          this.setState({\n            displayState: \"loading\"\n          });\n        } else {\n          this.setState({\n            displayState: \"error\"\n          });\n        }\n      });\n    } else {\n      this.setState({\n        displayState: \"invalid\"\n      });\n    }\n\n    console.log(this.state);\n  }\n\n  validateToken() {\n    const url = \"http://localhost:8080\";\n    fetch(url + \"/authenticate?username=\" + this.state.username + \"&token=\" + this.state.password, {\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      if (data[\"authenticated\"]) {\n        document.cookie = \"user=\" + this.state.username + \"; path=/\";\n        document.cookie = \"name=\" + this.state.firstName + \"; path=/\";\n        window.location = \"/\";\n      } else {\n        this.setState({\n          displayState: \"error\"\n        });\n      }\n    });\n  }\n\n  validateFields() {\n    return this.state.firstName !== \"\" && this.state.lastName !== \"\" && this.state.username !== \"\";\n  }\n\n  displayBox() {\n    if (this.state.displayState === \"form\") {\n      return __jsx(ContentBox, {\n        title: \"Hey There ðŸ‘‹\",\n        subtitle: \"Welcome to the new DMK Portal!\"\n      }, __jsx(FormBox, {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        username: this.state.username,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }));\n    } else if (this.state.displayState === \"loading\") {\n      return __jsx(ContentBox, {\n        title: \"Check your email ðŸ“«\",\n        subtitle: \"Check your Purdue email for authentication. If you didn't get anything, refresh and retype your username.\"\n      }, __jsx(Input, {\n        placeholder: \"top secret...\"\n      }), __jsx(Button, {\n        onClick: this.validateToken\n      }));\n    } else if (this.state.displayState === \"invalid\") {\n      return __jsx(ContentBox, {\n        title: \"Uh Oh ðŸ˜•\",\n        subtitle: \"Looks like you are missing some fields. Try again.\"\n      }, __jsx(FormBox, {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        username: this.state.username,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }));\n    } else {\n      return __jsx(ContentBox, {\n        title: \"Well, that's embarrassing ðŸ™ˆ\",\n        subtitle: \"There's an error on our end. Try again later!\"\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"jsx-1555840043\"\n    }, __jsx(NavBar, null), this.displayBox(), __jsx(_JSXStyle, {\n      id: \"1555840043\"\n    }, [\"body{margin:0px;background-color:#F7F7FB;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;}\"]));\n  }\n\n}\n\nclass NavBar extends React.Component {\n  render() {\n    const navContainerStyle = {\n      width: \"100%\",\n      backgroundColor: \"#AB1B23\",\n      height: \"58px\"\n    };\n    const navImgStyle = {\n      width: \"50px\",\n      marginLeft: \"20px\",\n      marginTop: \"6px\"\n    };\n    return __jsx(\"div\", {\n      style: navContainerStyle\n    }, __jsx(\"img\", {\n      src: \"/images/icon.png\",\n      style: navImgStyle\n    }));\n  }\n\n}\n\nclass ContentBox extends React.Component {\n  render() {\n    let styles = {\n      contentBoxStyle: {\n        backgroundColor: \"white\",\n        width: \"500px\",\n        boxShadow: \"0 4px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n        display: \"block\",\n        margin: \"0px auto\",\n        marginTop: \"20px\",\n        overflow: \"scroll\",\n        height: \"450px\",\n        maxWidth: \"95%\"\n      },\n      boxTitleStyle: {\n        textAlign: \"center\",\n        paddingTop: \"30px\",\n        margin: \"0px\",\n        fontWeight: \"400\",\n        fontSize: \"35px\"\n      },\n      innerContentStyle: {\n        paddingTop: \"10px\",\n        width: \"95%\",\n        display: \"block\",\n        margin: \"0px auto\",\n        position: \"relative\"\n      },\n      subtitle: {\n        textAlign: \"center\",\n        fontWeight: \"300\",\n        marginTop: \"10px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\"\n      }\n    };\n    return __jsx(\"div\", {\n      style: styles.contentBoxStyle\n    }, __jsx(\"h3\", {\n      style: styles.boxTitleStyle\n    }, this.props.title), __jsx(\"h3\", {\n      style: styles.subtitle\n    }, this.props.subtitle), __jsx(\"div\", {\n      style: styles.innerContentStyle\n    }, this.props.children));\n  }\n\n}\n\nclass FormBox extends React.Component {\n  render() {\n    let styles = {\n      formContainer: {\n        display: \"block\",\n        margin: \"0px auto\",\n        width: \"100%\",\n        marginBottom: \"20px\",\n        marginTop: \"30px\"\n      }\n    };\n    return __jsx(\"form\", {\n      onSubmit: this.props.handleSubmit\n    }, __jsx(\"div\", {\n      style: styles.formContainer\n    }, __jsx(Input, {\n      name: \"firstName\",\n      value: this.props.firstName,\n      onChange: this.props.handleChange,\n      placeholder: \"First Name\"\n    }), __jsx(Input, {\n      name: \"lastName\",\n      value: this.props.lastName,\n      onChange: this.props.handleChange,\n      placeholder: \"Last Name\"\n    }), __jsx(Input, {\n      name: \"username\",\n      value: this.props.username,\n      onChange: this.props.handleChange,\n      placeholder: \"Purdue Username\"\n    })), __jsx(Button, null));\n  }\n\n}\n\nclass Input extends React.Component {\n  render() {\n    const inputStyle = {\n      border: \"1px solid black\",\n      padding: \"6px\",\n      borderRadius: \"4px\",\n      fontSize: \"17px\",\n      display: \"block\",\n      margin: \"20px auto\",\n      textAlign: \"center\",\n      width: this.props.width\n    };\n    return __jsx(\"input\", {\n      name: this.props.name,\n      style: inputStyle,\n      value: this.props.firstName,\n      onChange: this.props.onChange,\n      placeholder: this.props.placeholder\n    });\n  }\n\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  toggleHover() {\n    this.setState({\n      hover: !this.state.hover\n    });\n  }\n\n  render() {\n    let buttonStyle = {\n      fontSize: \"30px\",\n      border: \"none\",\n      backgroundColor: \"rgb(191, 49, 56)\",\n      color: \"white\",\n      width: \"100px\",\n      height: \"40px\",\n      cursor: \"pointer\",\n      outline: \"none\",\n      borderRadius: \"4px\",\n      display: \"block\",\n      margin: \"0px auto\",\n      marginTop: \"30px\"\n    };\n\n    if (this.state.hover) {\n      buttonStyle.backgroundColor = \"#AB1B23\";\n    }\n\n    return __jsx(\"button\", {\n      onMouseLeave: () => this.toggleHover(),\n      onMouseEnter: () => this.toggleHover(),\n      style: buttonStyle,\n      onClick: this.props.onClick\n    }, \"\\u2192\");\n  }\n\n}\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}