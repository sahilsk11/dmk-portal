{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","React","Component","NavBar","className","src","ContentContainer","props","state","apiKey","baseURL","eventsData","newsData","upcomingData","spotlightData","brotherData","brotherName","this","getEventData","getNewsData","getUpcomingData","getSpotlightData","getBrotherData","url","fetch","then","res","json","data","console","log","records","setState","fields","i","length","push","title","height","content","ContentBox","style","renderContent","Attendance","attendance","Spotlight","undefined","img","renderWhenReady","NewsList","items","headline","link","renderItems","Events","name","time","month","day","EventItem","NewsItem","window","open","onClick","handleClick","width","renderImage","Slack","placeholder","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97307fed.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <ContentContainer />\n      </div>\n    );\n  }\n}\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <div className=\"nav-container\">\n        <img src=\"./icon.png\" className=\"nav-img\" />\n      </div>\n    )\n  }\n}\n\nclass ContentContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiKey: \"keyjYTQNlzdmReX94\", baseURL: \"https://api.airtable.com/v0/appwaUv9OXdJ4UNpy\", eventsData: [], newsData: [], upcomingData: [], spotlightData: {}, brotherData: {}, brotherName: \"\" }\n  }\n\n  componentDidMount() {\n    this.getEventData();\n    this.getNewsData();\n    this.getUpcomingData();\n    this.getSpotlightData();\n    this.getBrotherData();\n  }\n\n  getBrotherData() {\n    const url = this.state.baseURL + \"/brother_data?api_key=\" + this.state.apiKey;\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        console.log(data.records);\n        this.setState({ brotherData: data.records[0].fields, brotherName: data.records[0].fields[\"first_name\"] });\n      });\n  }\n\n  getSpotlightData() {\n    const url = this.state.baseURL + \"/spotlight?api_key=\" + this.state.apiKey;\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        console.log(data.records);\n        this.setState({ spotlightData: data.records[0].fields });\n      });\n  }\n\n  getUpcomingData() {\n    let upcomingData = [];\n    //random variables at the end are used to sort events\n    const url = this.state.baseURL + \"/upcoming?api_key=\" + this.state.apiKey + \"&sort%5B0%5D%5Bfield%5D=date_added&sort%5B0%5D%5Bdirection%5D=desc\";\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        for (var i = 0; i < data.records.length; i++) {\n          upcomingData.push(data.records[i].fields);\n        }\n        this.setState({ upcomingData: upcomingData });\n      });\n  }\n\n  getNewsData() {\n    let newsData = [];\n    //random variables at the end are used to sort events\n    const url = this.state.baseURL + \"/news?api_key=\" + this.state.apiKey + \"&sort%5B0%5D%5Bfield%5D=date_added&sort%5B0%5D%5Bdirection%5D=desc\";\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        for (var i = 0; i < data.records.length; i++) {\n          newsData.push(data.records[i].fields);\n        }\n        this.setState({ newsData: newsData });\n      });\n  }\n\n  getEventData() {\n    let eventsData = [];\n    //random variables at the end are used to sort events\n    const url = this.state.baseURL + \"/events?api_key=\" + this.state.apiKey + \"&sort%5B0%5D%5Bfield%5D=date\";\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        for (var i = 0; i < data.records.length; i++) {\n          eventsData.push(data.records[i].fields);\n        }\n        this.setState({ eventsData: eventsData });\n      });\n  }\n\n  getEventData() {\n    let eventsData = [];\n    //random variables at the end are used to sort events\n    const url = this.state.baseURL + \"/events?api_key=\" + this.state.apiKey + \"&sort%5B0%5D%5Bfield%5D=date\";\n    fetch(url).then(res => res.json())\n      .then((data) => {\n        for (var i = 0; i < data.records.length; i++) {\n          eventsData.push(data.records[i].fields);\n        }\n        this.setState({ eventsData: eventsData });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"content-container\">\n        <div className=\"column\">\n          <ContentBox title={\"Welcome, \" + this.state.brotherName + \" 👋\"} height=\"6%\" />\n          <ContentBox title=\"Chapter Attendance ❤️\" data={this.state.brotherData} content=\"Attendance\" height=\"45%\" />\n          <ContentBox title=\"Brother Spotlight 🤠\" data={this.state.spotlightData} content=\"Spotlight\" height=\"41.2%\" />\n        </div>\n        <div className=\"column\">\n          <ContentBox title=\"Coming Up ⚡️\" data={this.state.upcomingData} content=\"Upcoming\" height=\"44.7%\" />\n          <ContentBox title=\"News Panel 📰\" data={this.state.newsData} content=\"News\" height=\"50%\" />\n        </div>\n        <div className=\"column\">\n          <ContentBox title=\"Upcoming Events 📣\" data={this.state.eventsData} content=\"Event\" height=\"67.7%\" />\n          <ContentBox title=\"Drop us a Line 🤖\" content=\"Slack\" height=\"27%\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ContentBox extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderContent() {\n    if (this.props.content == \"Attendance\") {\n      return <Attendance data={this.props.data} />;\n    } else if (this.props.content == \"Spotlight\") {\n      return <Spotlight data={this.props.data} />;\n    } else if (this.props.content == \"Upcoming\" || this.props.content == \"News\") {\n      return <NewsList data={this.props.data} />;\n    } else if (this.props.content == \"Event\") {\n      return <Events data={this.props.data} />;\n    } else if (this.props.content == \"Slack\") {\n      return <Slack data={this.props.data} />;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content-box\" style={{ \"height\": this.props.height }}>\n        <h3 className=\"box-title\">{this.props.title}</h3>\n        <div className=\"box-content\">\n          {this.renderContent()}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Attendance extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <img src=\"attendance.png\" className=\"attendance-graph\" />\n        <p>We've seen you at {this.props.data.attendance} out of 5 chapters this semester.</p>\n      </div>\n    );\n  }\n}\n\nclass Spotlight extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderWhenReady() {\n    if (this.props.data.img != undefined) {\n      return (\n        <div>\n          <img className=\"spotlight-img\" src={this.props.data.img[0].url} />\n          <p className=\"brother-description\">Meet Akash Raju ('20): CEO of Glimpse and Founding Class of DMK</p>\n        </div>\n      )\n    }\n    return (\n      <div></div>\n    )\n  }\n  render() {\n    return (\n      <div>\n        {this.renderWhenReady()}\n      </div>\n    );\n  }\n}\n\nclass NewsList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderItems() {\n    var items = [];\n    const data = this.props.data;\n    for (var i = 0; i < data.length; i++) {\n      items.push(<NewsItem content={data[i].headline} img={data[i].img[0].url} link={data[i].link} />);\n    }\n    return items;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderItems()}\n      </div>\n    );\n  }\n}\n\nclass Events extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderItems() {\n    var items = [];\n    const data = this.props.data;\n    for (var i = 0; i < data.length; i++) {\n      items.push(<EventItem name={data[i].name} time={data[i].time} month={data[i].month} day={data[i].day} />);\n    }\n    return items;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderItems()}\n      </div>\n    );\n  }\n}\n\nclass EventItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"event-item\">\n        <div className=\"date-container\">\n          <p className=\"month\">{this.props.month}</p>\n          <p className=\"day\">{this.props.day}</p>\n        </div>\n        <div>\n          <h5 className=\"event-name\">{this.props.name}</h5>\n          <p className=\"event-time\">{this.props.time}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass NewsItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick() {\n    if (this.props.link != \"#\") {\n      window.open(this.props.link, \"_blank\")\n    }\n  }\n\n  renderImage() {\n    if (this.props.img != undefined && this.props.img != \"\") {\n      return (\n        <div>\n          <div className=\"news-item-container\" onClick={() => this.handleClick()}>\n            <div className=\"item-img-wrapper\">\n              <img className=\"item-img\" src={this.props.img} />\n            </div>\n            <div className=\"item-text-wrapper\">\n              <p className=\"item-content\">{this.props.content}</p>\n            </div>\n          </div>\n          <hr className=\"hr\" width=\"70%\" />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <p>{this.props.content}</p>\n          <hr className=\"hr\" width=\"70%\" />\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderImage()}\n      </div>\n    );\n  }\n}\n\nclass Slack extends React.Component {\n  render() {\n    return (\n      <div className=\"input-wrapper\">\n        <textarea className=\"slack-input\" placeholder=\"I'm hungry...\"></textarea>\n        <button>send</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}